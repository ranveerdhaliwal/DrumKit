{"version":3,"sources":["components/SoundBox.tsx","App.tsx","index.tsx"],"names":["SoundBox","sound","letter","audioRef","useRef","useEffect","playSound","e","current","audio","console","log","currentTime","play","keyboardJS","bind","unbind","ref","data-key","src","App","watch","stop","className","rootElement","document","getElementById","render"],"mappings":"yLAkBO,MAAMA,EAAW,EAAGC,QAAOC,aAChC,MAAMC,EAAWC,iBAAyB,MAoB1C,OAlBAC,oBAAU,KACR,SAASC,EAAUC,GACjB,GAAyB,OAArBJ,EAASK,QAAkB,CAC7B,MAAMC,EAA0BN,EAASK,QAGzC,GAFAE,QAAQC,IAAIF,IAEPA,EAAO,OAEZA,EAAMG,YAAc,EACpBH,EAAMI,QAMV,OAFAC,IAAWC,KAAKb,EAAQI,GAEjB,IAAMQ,IAAWE,OAAOd,EAAQI,IACtC,CAACJ,IAGF,yBACEe,IAAKd,EACLe,WAAUhB,EACViB,IAAG,kBAAalB,EAAb,W,MCnCM,SAASmB,IAStB,OARAf,oBAAU,KAGRS,IAAWO,QAEJ,IAAMP,IAAWQ,QACvB,IAGD,uBAAKC,UAAU,OACb,gBAACvB,EAAD,CAAUC,MAAM,OAAOC,OAAO,MADhC,QCbJ,MAAMsB,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,gBAACP,EAAD,MAASI,I","file":"static/js/main.8e8e39ca.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { useRef, useEffect } from \"react\";\r\nimport keyboardJS from \"keyboardjs\";\r\n\r\nimport { SoundTypes } from \"./../types\";\r\n\r\ninterface Props {\r\n  sound: SoundTypes;\r\n  letter: string;\r\n}\r\n\r\n/**\r\n * I called this component a sound box because its visually a box and it plays sound\r\n * Hopefully thats clear to other people but it made sense in my head lol\r\n *\r\n * Pass in a sound you want to play when the user clicks on a letter (aka key on your keyboard) that you pass in\r\n * There is a defined list of sounds but for the letter you can use any key.\r\n */\r\nexport const SoundBox = ({ sound, letter }: Props) => {\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  useEffect(() => {\r\n    function playSound(e: any) {\r\n      if (audioRef.current !== null) {\r\n        const audio: HTMLAudioElement = audioRef.current;\r\n        console.log(audio);\r\n\r\n        if (!audio) return;\r\n\r\n        audio.currentTime = 0;\r\n        audio.play();\r\n      }\r\n    }\r\n\r\n    keyboardJS.bind(letter, playSound);\r\n\r\n    return () => keyboardJS.unbind(letter, playSound);\r\n  }, [letter]);\r\n\r\n  return (\r\n    <audio\r\n      ref={audioRef}\r\n      data-key={letter}\r\n      src={`/sounds/${sound}.wav`}\r\n    ></audio>\r\n  );\r\n};\r\n","import * as React from \"react\";\nimport { useEffect } from \"react\";\nimport keyboardJS from \"keyboardjs\";\n\nimport { SoundBox } from \"./components/SoundBox\";\n\nimport \"./styles.css\";\n\nexport default function App() {\n  useEffect(() => {\n    // need to initialize the keyboardJS library watching up here in the top App leve\n    // so that all components anywhere can simply bind functions to keys without any more work\n    keyboardJS.watch();\n\n    return () => keyboardJS.stop();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <SoundBox sound=\"boom\" letter=\"b\" />\n      test\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}